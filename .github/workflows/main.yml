name: Flutter CI/CD Pipeline

on:
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          
      - name: Get Dependencies
        run: flutter pub get
        
      - name: Run Tests
        run: flutter test --coverage
        
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/lcov.info

  build:
    name: Build Web and APK
    needs: test # This ensures tests pass before building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          
      - name: Get Dependencies
        run: flutter pub get
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
        
      - name: Build Web
        run: flutter build web

      - name: Enable Web Frameworks Experiments
        run: firebase experiments:enable webframeworks

      - name: Deploy to Firebase
        run: firebase deploy --token "${{ secrets.FIREBASE_TOKEN }}"
        
      - name: Build Android APK
        run: flutter build apk --release
        
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: release-apk
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GTH_TKN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
          
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GTH_TKN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive